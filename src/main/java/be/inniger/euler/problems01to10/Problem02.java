package be.inniger.euler.problems01to10;

/**
 * Even Fibonacci numbers
 * <p>
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem02 {

  private static final int MAX_VALUE = 4_000_000;

  public int solve() {
    return fib(1, 0, 0);
  }

  private int fib(int prev, int prevPrev, int evenSum) {
    if (prev > MAX_VALUE) {
      return evenSum;
    }

    int current = prev + prevPrev;
    return fib(current, prev, evenSum + (current % 2 == 0 ? current : 0));
  }
}
